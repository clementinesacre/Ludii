(define "Phase1"
    (move
        (from (handSite Mover))
        (to (sites Playable))
    )
)

(define "Phase2"
    (if ("SameTurn")
        "AddDisk"
        "MoveRing"
    )
)

(define "AddDisk"
    (if
         (is Mover P1)
         (move
             Add (piece (id "Disc0") state:1)
             (to (last From))
         )
         (move
             Add (piece (id "Disc0") state:2)
             (to (last From))
         )
    )
)

(define "MoveRing"
    (forEach Piece "Ring"
        (then (moveAgain))
    )
)

(define "HopCaptureDistanceDiscs"
    (move Hop
        #1
        #2
        (between
            before:(count Rows)
            #3
            after:0
            if:(is In (between) (sites Occupied by:Neutral component:"Disc"))
            (apply (flip (between)))
        )
        (to if:(is Empty (to)))
        #4
    )
)

(define "RingMovements"
    (or
        ("StepToEmpty")
        ("HopCaptureDistanceDiscs" (from) Adjacent (range 1 Infinity))
    )
)

(define "IsLine"
    (<= 1
        (count Sites
            in:(forEach
                (sites Occupied by:Neutral component:"Disc")
                if:(is Line 5
                    through:(site)
                    if:(is In (sites State #1))
                )
            )
        )
    )
)

//-----------------------------------------------
// Main routine

(game "TestClementine"
    (players 2)
        (equipment {
            (boardless <Tiling:type> 5)
            //(board (square 5))
            (piece "Disc" Neutral (flips 1 2))
            (piece "Ring" Each "RingMovements")
            (tile <Tiling:tile> Neutral)
            (hand Each)
        })
        (rules
            (start {
                (place "Ring" "Hand" count:3)
                (place <Tiling:piece0> (centrePoint))
                (place <Tiling:piece0> (ahead (centrePoint) E))
                (place <Tiling:piece0> (ahead (centrePoint) W))
            })

            (play
                (if
                    ("HandEmpty" Mover)
                    "Phase2"
                    "Phase1"
                )
            )

            (end {
                (if ("IsLine" 1) (result P1 Win))
                (if ("IsLine" 2) (result P2 Win))
            })
        )
)

//------------------------------------------------------------------------------

(option "Tiling" <Tiling> args:{ <type> <tile> <numSides> <piece0> }
{
    (item "Hexagonal" <Hexagonal> <"Hex"> <numSides:6> <"Hex0"> "The game uses hexagonal tiles.")
    (item "Square" <Square>  <"Square"> <numSides:4> <"Square0"> "The game uses square tiles")**
    (item "Triangle" <Triangular> <"Triangle"> <numSides:3> <"Triangle0"> "The game uses triangle tiles")
    //(item "Rectangle" <Rectangle> <"Rectangle"> <numSides:4> <"Rectangle0"> "The game uses rectangle tiles")
})

//------------------------------------------------------------------------------

(metadata
    (info {
        (description "TestClementine permet de tester le concept de boardless growing state / plate")
        (rules "")
        (version "1.3.12")
        (classification "board/space/line")
        (credit "Clémentine Sacré")
    })
    (graphics {
        (piece Scale "Disc" 0.8)
        (piece Scale "Ring" 0.8)
        (piece Colour state:1 fillColour:(colour White))
        (piece Colour state:2 fillColour:(colour Black))
        (piece Colour "Hex0" fillColour:(colour LightGrey))

        (board Style Board)
    })
)
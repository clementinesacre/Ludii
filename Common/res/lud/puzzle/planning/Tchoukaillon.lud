(define "Rumba" 0)

(define "AllSitesNotRumba" (difference (sites Board) "Rumba"))

(define "LastHole" (last To afterConsequence:True))

(define "AllCountersInRumba" (= 0 (count Sites in:(difference ("AllSitesNotRumba") (sites Empty)))))

//------------------------------------------------------------------------------

(game "Tchoukaillon"
    (players 1)
    (equipment {
        (board 
            (rectangle 1 <Start:int>) 
            (track "Track" "<Start:end>,W" loop:False)
            use:Vertex
        )
        (piece "Seed" Shared)
    })
    (rules
        (start <Start:lst>)
        (play 
            (move Select
                (from
                    ("AllSitesNotRumba")
                    if:    (and
                        (!= 0 (count at:(from)))
                        (= (from) (count at:(from)))
                    )
                )
                (then (sow))
            )
        )
        (end {
            (if ("AllCountersInRumba") (result Mover Win))
            (if 
                (and (= 1 (count at:("LastHole"))) (!= ("LastHole") ("Rumba"))) 
                (result Mover Loss)
            )
        })
    )
)

//------------------------------------------------------------------------------

(option "Start" <Start> args:{<end><int><lst>}
    {
    (item "2" <2> <3> < (place Stack "Seed" (sites { 1 2 }) counts:{1 2}) > "2 holes at start")
    (item "3" <3> <4> < (place Stack "Seed" (sites { 1..3 }) counts:{1 1 3}) > "3 holes at start")
    (item "4" <4> <5> < (place Stack "Seed" (sites { 1..4 }) counts:{0 2 2 4}) > "4 holes at start")**
    (item "5" <5> <6> < (place Stack "Seed" (sites { 1..5 }) counts:{1 1 1 3 5}) > "5 holes at start")
    (item "6" <6> <7> < (place Stack "Seed" (sites { 1..6 }) counts:{1 1 3 2 4 6}) > "6 holes at start")*
    (item "7" <7> <8> < (place Stack "Seed" (sites { 1..7 }) counts:{1 2 2 1 3 5 7}) > "7 holes at start")
    (item "8" <8> <9> < (place Stack "Seed" (sites { 1..8 }) counts:{1 1 3 4 2 4 6 8}) > "8 holes at start")
    }
)

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        }
    )
    
    (graphics {
        (board Style Mancala)
    })
    
)

